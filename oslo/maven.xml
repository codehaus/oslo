<project xmlns:m="maven" xmlns:jxr="jxr" xmlns:j="jelly:core" xmlns:u="jelly:util">
    <property name="aspectwerkz.classpath" refid="maven.dependency.classpath"/>
    <property environment="env"/>

    <taskdef name="compileSourceMetaData"
        classname="aspectwerkz.definition.metadata.task.SourceFileMetaDataCompilerTask"
        classpath="${aspectwerkz.classpath}"/>

    <taskdef name="compileClassMetaData"
        classname="aspectwerkz.definition.metadata.task.ClassFileMetaDataCompilerTask"
        classpath="${aspectwerkz.classpath}"/>

    <!-- =================================================== -->
    <!--  Compile the classes with AspectWerkz               -->
    <!-- =================================================== -->
    <goal name="oslo:aspectwerkz:preprocess" prereqs="java:compile">
        <echo>${maven.src.dir}/aspectwerkz/oslo.xml</echo>
        <echo>${aspectwerkz.classpath}</echo>
        <echo>${maven.build.dir}/classes</echo>
        <echo>aspectwerkz.home=${env.ASPECTWERKZ_HOME}</echo>

        <!--    <compileClassMetaData
                definitionFile="${maven.src.dir}/aspectwerkz/oslo.xml"
                repository="${maven.build.dir}/classes"
                metaDataDir="${maven.build.dir}/_metaData"/>   -->

        <!-- Create the meta-data directory -->
        <mkdir dir="${maven.build.dir}/_metaData"/>

        <!-- Create the meta data weave -->
        <java classname="aspectwerkz.definition.metadata.ClassFileMetaDataCompiler" fork="true" classpathref="maven.dependency.classpath" output="java.output">
            <arg value="${maven.src.dir}/aspectwerkz/oslo.xml"/>
            <arg value="${maven.build.dir}/classes"/>
            <arg value="${maven.build.dir}/_metaData"/>
        </java>

        <!-- Preprocess the class files -->
        <java classname="org.cs3.jmangler.offline.starter.Main" classpathref="maven.dependency.classpath" fork="true" append="true" output="java.output">
            <jvmarg value="-Daspectwerkz.definition.file=${maven.src.dir}/aspectwerkz/oslo.xml"/>
            <jvmarg value="-Daspectwerkz.src.dir="/>
<!--            <jvmarg value="-Daspectwerkz.home=${env.ASPECTWERKZ_HOME}"/> -->
            <jvmarg value="-Daspectwerkz.home=${maven.src.dir}"/>
            <jvmarg value="-Daspectwerkz.metadata.dir=${maven.build.dir}/_metaData"/>
            <jvmarg value="-Dorg.cs3.jmangler.initfile=${maven.src.dir}/config/jmangler-order.config"/>
<!--            <jvmarg value="-Dorg.cs3.jmangler.initfile=${env.ASPECTWERKZ_HOME}/config/jmangler-order.config"/>-->
            <arg value="--cp"/>
            <arg value="${maven.build.dir}/classes"/>
            <arg value="--tcp"/>
<!--            <arg value="${env.ASPECTWERKZ_HOME}/lib/aspectwerkz-0.4.jar"/>-->
            <arg value="${maven.src.dir}/../devlib/aspectwerkz/jars/aspectwerkz-0.4.jar"/>
            <arg value="--cf"/>
<!--            <arg value="${env.ASPECTWERKZ_HOME}/config/aspectwerkz.conf"/>-->
            <arg value="${maven.src.dir}/config/aspectwerkz.conf"/>
        </java>

        <!-- Load the output and display it -->
        <loadfile property="message" srcFile="java.output"/>
        <echo>${message}</echo>
    </goal>

    <goal name="oslo:execute:sample">
        <!-- ClassPath for the sample file -->
        <path id="execute.path">
            <path refid="maven.dependency.classpath"/>
            <pathelement path="${maven.build.dir}/classes"/>
        </path>

        <!-- Execute the sample class with or without the aspects -->
        <java classname="org.oslo.sample.SampleMain" fork="true" classpathref="execute.path" output="java.output">
            <jvmarg value="-Daspectwerkz.definition.file=${maven.src.dir}/aspectwerkz/oslo.xml"/>
            <jvmarg value="-Daspectwerkz.home=${env.ASPECTWERKZ_HOME}"/>
            <jvmarg value="-Daspectwerkz.metadata.dir=${maven.build.dir}/_metaData"/>
        </java>

        <!-- Load the output and display it -->
        <loadfile property="message" srcFile="java.output"/>
        <echo>${message}</echo>
    </goal>

    <goal name="oslo:start:server">
        <!-- ClassPath for the sample file -->
        <path id="execute.path">
            <path refid="maven.dependency.classpath"/>
            <pathelement path="${maven.build.dir}/classes"/>
        </path>

        <java classname="org.oslo.server.RantLoggingServer" fork="true" classpathref="execute.path" output="java.output"/>

        <!-- Load the output and display it -->
        <loadfile property="message" srcFile="java.output"/>
        <echo>${message}</echo>
    </goal>
</project>